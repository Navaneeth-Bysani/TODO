{"version":3,"sources":["components/Header.js","components/Footer.js","components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","href","target","rel","Body","localStorage","getItem","setItem","JSON","stringify","useState","parse","users","setUsers","contestSlug","setContestSlug","type","value","onChange","event","onClick","preventDefault","alert","prevState","comments","length","map","el","idx","splice","deleteClicked","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAUeA,EARA,WACX,OACI,qBAAKC,UAAY,SAAjB,SACI,6CCMGC,G,MAVA,WACX,OACI,qBAAKD,UAAY,SAAjB,SACI,sDACmB,mBAAGE,KAAO,0DAA0DC,OAAS,SAASC,IAAM,aAA5F,8B,cC2DhBC,G,MA5DF,WAC8B,MAApCC,aAAaC,QAAQ,aACpBD,aAAaE,QAAQ,WAAYC,KAAKC,UAAU,KAEpD,MAA0BC,mBAASF,KAAKG,MAAMN,aAAaC,QAAQ,cAAnE,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAgCA,OACI,sBAAKhB,UAAY,OAAjB,UACI,8BACI,iCACI,uBAAOiB,KAAO,OAAOC,MAASH,EAAaI,SAhCzB,SAACC,GAC/BJ,EAAeI,EAAMjB,OAAOe,UAgChB,uBAAOD,KAAO,SAASC,MAAQ,MAAMG,QA9B/B,SAACD,GAEnB,GADAA,EAAME,iBACa,KAAhBP,EACC,OAAOQ,MAAM,gCAEjBT,GAAU,SAAAU,GACN,MAAM,GAAN,mBACQA,GADR,CACmBT,OAGvB,IAAIU,EAAWhB,KAAKG,MAAMN,aAAaC,QAAQ,aAC/CD,aAAaE,QAAQ,WAAWC,KAAKC,UAAL,sBAAmBe,GAAnB,CAA6BV,MAE7DC,EAAe,YAoBX,8BACsB,IAAjBH,EAAMa,OAAe,gDAA0Bb,EAAMc,KAAI,SAACC,EAAGC,GAAJ,OACtD,+BACKD,EACD,wBAAoBP,QAAW,kBAtB7B,SAACQ,GACnB,IAAIJ,EAAWhB,KAAKG,MAAMN,aAAaC,QAAQ,aAC/CkB,EAASK,OAAOD,EAAK,GACrBf,EAASW,GACTnB,aAAaE,QAAQ,WAAYC,KAAKC,UAAUe,IAkBKM,CAAcF,IAAnD,mBAAeA,KAFRA,aCpChBG,MAVf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94e8f9a6.chunk.js","sourcesContent":["import './Header.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className = \"header\">\r\n            <h1>TODO APP</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import './Footer.css';\r\nconst Footer = () => {\r\n    return(\r\n        <div className = \"footer\">\r\n            <h5>\r\n                Made with ‚ù§ by <a href = \"https://www.linkedin.com/in/navaneeth-bysani-639b4219a/\" target = \"_blank\" rel = \"noreferrer\">Navaneeth</a>\r\n            </h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import {useState} from 'react';\r\nimport './Body.css';\r\n\r\n\r\nconst Body = () => {\r\n    if(localStorage.getItem('comments') == null) {\r\n        localStorage.setItem('comments', JSON.stringify([]));\r\n    }\r\n    const [users, setUsers] = useState(JSON.parse(localStorage.getItem('comments')));\r\n    const [contestSlug, setContestSlug] = useState('');\r\n    // const [updateIDX, setUpdateIDX] = useState(-1);\r\n    // const [updateValue, setUpdateValue] = useState('');\r\n\r\n    const contestSlugChangedHandler = (event) => {\r\n        setContestSlug(event.target.value);\r\n    }\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if(contestSlug === \"\") {\r\n            return alert('You can not add empty string')\r\n        }\r\n        setUsers((prevState => {\r\n            return (\r\n                [...prevState, contestSlug]\r\n            )\r\n        }));\r\n        let comments = JSON.parse(localStorage.getItem('comments'));\r\n        localStorage.setItem('comments',JSON.stringify([...comments, contestSlug]));\r\n        \r\n        setContestSlug('');\r\n    }\r\n    const deleteClicked = (idx) => {\r\n        let comments = JSON.parse(localStorage.getItem('comments'));\r\n        comments.splice(idx, 1);\r\n        setUsers(comments);\r\n        localStorage.setItem('comments', JSON.stringify(comments));\r\n    }\r\n    // const updateClicked = (idx) => {\r\n    //     let comments = [...users];\r\n    //     comments[idx] = updateValue;\r\n    // }\r\n    return (\r\n        <div className = \"body\">\r\n            <div>\r\n                <form>\r\n                    <input type = \"text\" value = {contestSlug} onChange = {contestSlugChangedHandler}/>\r\n                    <input type = \"submit\" value = \"add\" onClick = {submitHandler}/>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                {users.length === 0 ? <p>input something</p> : (users.map((el,idx) => (\r\n                    <h4 key = {idx}>\r\n                        {el}\r\n                        <button key = {idx} onClick = {() => deleteClicked(idx)}>delete</button>\r\n                        {/* <button key = {idx + \"1\"} onClick = {()=>{setUpdateIDX(idx);setUpdateValue('')}}>update</button>\r\n                        <input type = \"text\" placeholder = \"enter updated value\" hidden = {updateIDX !== idx}/>\r\n                        <button hidden = {updateIDX !== idx} onClick = {() => {updateClicked(idx)}}>confirm update</button> */}\r\n                    </h4>\r\n                )))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Body from './components/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Body/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}